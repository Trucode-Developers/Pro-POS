name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-20.04, windows-latest]
        cpu: [x64, arm64]
        include:
          - os: macos-latest
            cpu: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install Tauri CLI (Windows)
        if: matrix.os == 'windows-latest'
        run: npm i @tauri-apps/cli-win32-x64-msvc

      - name: Install Tauri CLI (macOS Intel)
        if: matrix.os == 'macos-latest' && matrix.cpu == 'x64'
        run: npm i @tauri-apps/cli-darwin-x64

      - name: Install Tauri CLI (macOS Apple Silicon)
        if: matrix.os == 'macos-latest' && matrix.cpu == 'arm64'
        run: npm i @tauri-apps/cli-darwin-arm64

      - name: Install Tauri CLI (Ubuntu)
        if: matrix.os == 'ubuntu-20.04'
        run: npm i @tauri-apps/cli-linux-x64-gnu@2.0.0-alpha.0

      - name: Install dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Install frontend dependencies
        run: npm install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'App Name v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false